{"version":3,"sources":["components/Button/button.tsx","App.tsx","index.tsx"],"names":["ButtonSize","ButtonType","Button","props","btnType","disabled","size","children","href","className","restProps","classes","classnames","Link","defaultProps","Default","App","Primary","Danger","Larget","Small","ReactDOM","render","document","getElementById"],"mappings":"mIAIYA,EAKAC,E,8EALAD,K,YAAAA,E,YAAAA,M,cAKAC,K,kBAAAA,E,kBAAAA,E,gBAAAA,E,aAAAA,M,KAqBZ,IAAMC,EAAgC,SAACC,GAAW,IAAD,EACxCC,EAAoED,EAApEC,QAASC,EAA2DF,EAA3DE,SAAUC,EAAiDH,EAAjDG,KAAMC,EAA2CJ,EAA3CI,SAAUC,EAAiCL,EAAjCK,KAAMC,EAA2BN,EAA3BM,UAAcC,EADf,YAC4BP,EAD5B,6DAGzCQ,EAAUC,IAAW,MAAMH,GAAP,iCAChBL,GAAYA,GADI,4BAEhBE,GAASA,GAFO,cAGxB,WAAaF,IAAYH,EAAWY,MAASR,GAHrB,IAM1B,OAAGD,IAAYH,EAAWY,MAAQL,EAEhC,qCACEC,UAAWE,EACXH,KAAMA,GACFE,GACJH,GAIA,0CACEE,UAAWE,EACXN,SAAUA,GACNK,GAEHH,IAOTL,EAAOY,aAAa,CAClBV,QAASH,EAAWc,QACpBV,UAAU,GAGGH,QC7CAc,MAlBf,WAEE,OACE,yBAAKP,UAAU,OACb,4BAAQA,UAAU,cAChB,kBAAC,EAAD,CAAQJ,UAAQ,GAAhB,gBACA,kBAAC,EAAD,CAAQD,QAASH,EAAWgB,SAA5B,WACA,kBAAC,EAAD,CAAQb,QAASH,EAAWY,KAAML,KAAK,wBAAvC,QACA,kBAAC,EAAD,CAAQJ,QAASH,EAAWiB,QAA5B,WACA,kBAAC,EAAD,CAAQb,UAAQ,GAAhB,gBACA,kBAAC,EAAD,CAAQD,QAASH,EAAWgB,QAASX,KAAMN,EAAWmB,QAAtD,WACA,kBAAC,EAAD,CAAQf,QAASH,EAAWY,KAAMR,UAAQ,EAACC,KAAMN,EAAWmB,OAAQX,KAAK,wBAAzE,QACA,kBAAC,EAAD,CAAQJ,QAASH,EAAWiB,OAAQZ,KAAMN,EAAWoB,OAArD,cCNRC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.6269db10.chunk.js","sourcesContent":["import React from 'react'\nimport classnames from 'classnames'\nimport '../../styles/index.scss'\n\nexport enum ButtonSize{\n  Larget = 'lg',\n  Small = 'sm'\n}\n\nexport enum ButtonType{\n  Primary = 'primary',\n  Default = 'default',\n  Danger = 'danger',\n  Link = 'link'\n}\n\ninterface BaseButtonProps{\n  className?: string;\n  disabled?: boolean;\n  size?: ButtonSize;\n  btnType?: ButtonType;\n  children?: React.ReactNode;\n  href?:string;\n}\n\ntype NativeButtonProps = BaseButtonProps & React.ButtonHTMLAttributes<HTMLElement>\ntype AnchorButtonProps = BaseButtonProps & React.AnchorHTMLAttributes<HTMLElement>\nexport type ButtonProps = Partial<NativeButtonProps & AnchorButtonProps>\n\n\nconst Button: React.FC<ButtonProps> = (props) => {\n  const {btnType, disabled, size, children, href, className, ...restProps} = props\n\n  const classes = classnames('btn',className, {\n    [`btn-${btnType}`]: btnType,\n    [`btn-${size}`]: size,\n    'disables': (btnType === ButtonType.Link) && disabled\n  })\n\n  if(btnType === ButtonType.Link && href){\n    return (\n    <a\n      className={classes}\n      href={href}\n      {...restProps}\n    >{children}</a>\n    )\n  }else{\n    return (\n      <button\n        className={classes}\n        disabled={disabled}\n        {...restProps}\n      >\n        {children}\n      </button>\n    )\n  }\n\n}\n\nButton.defaultProps={\n  btnType: ButtonType.Default,\n  disabled: false\n}\n\nexport default Button\n","import React from 'react';\nimport Button,{ButtonSize, ButtonType} from './components/Button/button'\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Button disabled>测试</Button>\n        <Button btnType={ButtonType.Primary}>primary</Button>\n        <Button btnType={ButtonType.Link} href='http://www.baidu.com'>Link</Button>\n        <Button btnType={ButtonType.Danger}>primary</Button>\n        <Button disabled>测试</Button>\n        <Button btnType={ButtonType.Primary} size={ButtonSize.Larget}>primary</Button>\n        <Button btnType={ButtonType.Link} disabled size={ButtonSize.Larget} href='http://www.baidu.com'>Link</Button>\n        <Button btnType={ButtonType.Danger} size={ButtonSize.Small}>primary</Button>    \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","\n// export { default as Button } from './components/Button'\n\n// 测试\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}